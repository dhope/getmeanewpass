namefile <- switch(type,
"EFF" = "eff_large_wordlist.txt",
"Harry Potter" = "harrypotter_8k_3column-txt.txt",
"Star Trek" = "memory-alpha_8k_2018.txt",
"Game of Thrones" = "passDice.txt",
"Star Wars" = "starwars_8k_2018.txt"
)
type = 'EFF'
namefile <- switch(type,
"EFF" = "eff_large_wordlist.txt",
"Harry Potter" = "harrypotter_8k_3column-txt.txt",
"Star Trek" = "memory-alpha_8k_2018.txt",
"Game of Thrones" = "passDice.txt",
"Star Wars" = "starwars_8k_2018.txt"
)
type
rm(type)
namefile
rm(namefile)
type = "CA"
switch(type,
"EFF" = 0,
TRUE = 10
)
stringr::str_c(11126, collapse = "-")
devtools::load_all(".")
get_me_a_new_password(10)
type ="EFF"
lengthPass = 6
pass <- vector(length = lengthPass + 2)
namefile <- switch(type,
"EFF" = "eff_large_wordlist.txt",
"Harry Potter" = "harrypotter_8k_3column-txt.txt",
"Star Trek" = "memory-alpha_8k_2018.txt",
"Game of Thrones" = "passDice.txt",
"Star Wars" = "starwars_8k_2018.txt"
)
namefile
nskip <-  ifelse(type== "EFF", 0,10)
sep_ <- ifelse(type== "EFF", "","-")
set.seed(Sys.time())
t <- read.table(system.file("extdata",package = "getmeanewpass", namefile), skip = 10, stringsAsFactors = F)
t
for (i in 2:(lengthPass + 1)) {
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
i
as.integer(runif(n = 1, 1, 20))
sep_
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
t[t$V1 == r1, 2]
t$V1
r1
r1 <-       paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
as.character(t[t$V1 == r1, 2])
t$V1
r1
r1 <-       paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
as.character(t[t$V1 == r1, 2])
sample(1:(lengthPass + 2),1)
sample(1:(lengthPass + 2),1)
sample(1:(lengthPass + 2),2)
pass[sample(1:(lengthPass + 2),2)]
0:9
pass[sample(1:(lengthPass + 2),2)] <- sample(0:9,2)
pass
pass <- vector(length = lengthPass + 2)
pass[sample(1:(lengthPass + 2),2)] <- sample(0:9,2)
pass
sample(0:9,2)
pass <- rep(-99, length = lengthPass + 2)
pass
pass[sample(1:(lengthPass + 2),2)] <- sample(0:9,2)
pass
for (i in 1:(lengthPass + 2)) {
if(pass[[j]] == (-99)){
if(type == "EFF"){
r1 <-       paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
}
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
if(type == "EFF"){
r1 <-       paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
}
{
if(type == "EFF"){
r1 <-       paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
pass
set.seed(Sys.time())
devtools::load_all(".")
get_me_a_new_password(10)
get_me_a_new_password(10)
runif(n = 1, 1, 6)
as.integer(runif(n = 1, 1, 6)
)
devtools::load_all(".")
get_me_a_new_password(10)
lengthPass = 6, type = "EFF"
pass <- rep(-99, length = lengthPass + 2)
lengthPass = 6
type = "EFF"
pass <- rep(-99, length = lengthPass + 2)
namefile <- switch(type,
"EFF" = "eff_large_wordlist.txt",
"Harry Potter" = "harrypotter_8k_3column-txt.txt",
"Star Trek" = "memory-alpha_8k_2018.txt",
"Game of Thrones" = "passDice.txt",
"Star Wars" = "starwars_8k_2018.txt"
)
nskip <-  ifelse(type== "EFF", 0,10)
sep_ <- ifelse(type== "EFF", "","-")
set.seed(Sys.time())
pass[sample(1:(lengthPass + 2),2)] <- sample(0:9,2)
t <- read.table(system.file("extdata",package = "getmeanewpass", namefile), skip = 10, stringsAsFactors = F)
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
set.seed(Sys.time())
if(type == "EFF"){
r1 <-       paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
else{next}
}
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
if(type == "EFF"){
r1 <-paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
else{next}
}
as.character(t[t$V1 == r1, 2])
r1
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
if(type == "EFF"){
r1 <-paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
else{next}
}
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
if(type == "EFF"){
r1 <-paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
else{next}
}
pass
pass <- rep(-99, length = lengthPass + 2)
namefile <- switch(type,
"EFF" = "eff_large_wordlist.txt",
"Harry Potter" = "harrypotter_8k_3column-txt.txt",
"Star Trek" = "memory-alpha_8k_2018.txt",
"Game of Thrones" = "passDice.txt",
"Star Wars" = "starwars_8k_2018.txt"
)
nskip <-  ifelse(type== "EFF", 0,10)
sep_ <- ifelse(type== "EFF", "","-")
set.seed(Sys.time())
pass[sample(1:(lengthPass + 2),2)] <- sample(0:9,2)
t <- read.table(system.file("extdata",package = "getmeanewpass", namefile), skip = 10, stringsAsFactors = F)
for (i in 1:(lengthPass + 2)) {
if(pass[[i]] == (-99)){
if(type == "EFF"){
r1 <-paste0(
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6)), sep_,
as.integer(runif(n = 1, 1, 6))
)
}
else{
r1 <-
paste0(
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20)), sep_,
as.integer(runif(n = 1, 1, 20))
)
}
pass[[i]] <- as.character(t[t$V1 == r1, 2])
}
else{next}
}
print(stringr::str_c(pass, collapse = "-"))
devtools::load_all(".")
get_me_a_new_password(10)
get_me_a_new_password(10)
get_me_a_new_password(10, "Game of Thrones")
library(getmeanewpass)
library(getmeanewpass)
getmeanewpass::get_me_a_new_password()
library(getmeanewpass)
library(getmeanewpass)
get_me_a_new_password(lengthPass = 5, type = "EFF", nInt = 2)
rm(list =ls())
library(getmeanewpass)
devtools::load_all(".")
library(getmeanewpass)
library(getmeanewpass)
vignette(getmeanewpass)
vignette("getmeanewpass")
vignette("Password Intro")
?getmeanewpass
?get_me_a_new_password
vignette(package = "getmeanewpass")
vignette(package = "getmeanewpass")
library(getmeanewpass)
vignette(package = "getmeanewpass")
library(getmeanewpass)
vignette(package = "getmeanewpass")
vignette(all=F)
usethis::use_vignette("my-vignette")
library(getmeanewpass)
library(getmeanewpass)
library(getmeanewpass)
library(getmeanewpass)
get_me_a_new_password()
get_me_a_new_password(lengthPass = 150, type = "Star Wars", nInt = 20)
seeds_ <- sample(1:1E9,(lengthPass + nInt), replace = T)
library(getmeanewpass)
get_me_a_new_password(lengthPass = 150, type = "Star Wars", nInt = 20)
library(getmeanewpass)
get_me_a_new_password(lengthPass = 150, type = "Star Wars", nInt = 20)
library(getmeanewpass)
get_me_a_new_password(lengthPass = 20, type = "Star Wars", nInt = 20)
get_me_a_new_password(lengthPass = 1, type = "Star Wars", nInt = 20)
library(getmeanewpass)
library(getmeanewpass)
library(usethis)
use_gpl3_license()
use_roxygen_md()
testthat::test_file('prenew.r')
testthat::test_file('RÃ©prenew.r')
use_testthat()
use_test('prewnew.r')
expect_equal(set.seed(34) rnorm(1), set.seed(34) )
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
get_me_a_new_password()
rnorm(1)
}
)
library(testthat
)
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
get_me_a_new_password()
rnorm(1)
}
)
devtools::load_all(".")
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
get_me_a_new_password()
rnorm(1)
}
)
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
invisible(get_me_a_new_password())
rnorm(1)
}
)
devtools::load_all(".")
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
invisible(get_me_a_new_password())
rnorm(1)
}
)
expect_equal({set.seed(34)
rnorm(1)},
{set.seed(34)
invisible(z <- get_me_a_new_password())
rnorm(1)
}
)
devtools::load_all(".")
get_me_a_new_password(2, "Star Wars", 2)
library(getmeanewpass)
remotes::install_github("dhope/getmeanewpass")
library(testthat)
expect_false(get_me_a_new_password() == get_me_a_new_password()
)
library(getmeanewpass)
get_me_a_new_password() == get_me_a_new_password()
remotes::install_github("psolymos/QPAD")
